@using Mines_Web.Models
@model Mines_Web.Models.UserModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>

@using (Html.BeginForm("Register", "SignIn", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>UserModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ComparePassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ComparePassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ComparePassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CompareEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CompareEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CompareEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.State,
                new SelectList(new List<SelectListItem> {
                    new SelectListItem{ Text = "AL", Value = "AL" },
                    new SelectListItem{ Text = "AK", Value = "AK" },
                    new SelectListItem{ Text = "AZ", Value = "AZ" },
                    new SelectListItem{ Text = "AR", Value = "AR" },
                    new SelectListItem{ Text = "CA", Value = "CA" },
                    new SelectListItem{ Text = "CO", Value = "CO" },
                    new SelectListItem{ Text = "CT", Value = "CT" },
                    new SelectListItem{ Text = "DE", Value = "DE" },
                    new SelectListItem{ Text = "FL", Value = "FL" },
                    new SelectListItem{ Text = "GA", Value = "GA" },
                    new SelectListItem{ Text = "HI", Value = "HI" },
                    new SelectListItem{ Text = "ID", Value = "ID" },
                    new SelectListItem{ Text = "IL", Value = "IL" },
                    new SelectListItem{ Text = "IN", Value = "IN" },
                    new SelectListItem{ Text = "IA", Value = "IA" },
                    new SelectListItem{ Text = "KS", Value = "KS" },
                    new SelectListItem{ Text = "KY", Value = "KY" },
                    new SelectListItem{ Text = "LA", Value = "LA" },
                    new SelectListItem{ Text = "ME", Value = "ME" },
                    new SelectListItem{ Text = "MD", Value = "MD" },
                    new SelectListItem{ Text = "MA", Value = "MA" },
                    new SelectListItem{ Text = "MI", Value = "MI" },
                    new SelectListItem{ Text = "MN", Value = "MN" },
                    new SelectListItem{ Text = "MS", Value = "MS" },
                    new SelectListItem{ Text = "MO", Value = "MO" },
                    new SelectListItem{ Text = "MT", Value = "MT" },
                    new SelectListItem{ Text = "NE", Value = "NE" },
                    new SelectListItem{ Text = "NV", Value = "NV" },
                    new SelectListItem{ Text = "NH", Value = "NH" },
                    new SelectListItem{ Text = "NJ", Value = "NJ" },
                    new SelectListItem{ Text = "NM", Value = "NM" },
                    new SelectListItem{ Text = "NY", Value = "NY" },
                    new SelectListItem{ Text = "NC", Value = "NC" },
                    new SelectListItem{ Text = "ND", Value = "ND" },
                    new SelectListItem{ Text = "OH", Value = "OH" },
                    new SelectListItem{ Text = "OK", Value = "OK" },
                    new SelectListItem{ Text = "OR", Value = "OR" },
                    new SelectListItem{ Text = "PA", Value = "PA" },
                    new SelectListItem{ Text = "RI", Value = "RI" },
                    new SelectListItem{ Text = "SC", Value = "SC" },
                    new SelectListItem{ Text = "SD", Value = "SD" },
                    new SelectListItem{ Text = "TN", Value = "TN" },
                    new SelectListItem{ Text = "TX", Value = "TX" },
                    new SelectListItem{ Text = "UT", Value = "UT" },
                    new SelectListItem{ Text = "VT", Value = "VT" },
                    new SelectListItem{ Text = "VA", Value = "VA" },
                    new SelectListItem{ Text = "WA", Value = "WA" },
                    new SelectListItem{ Text = "WV", Value = "WV" },
                    new SelectListItem{ Text = "WI", Value = "WI" },
                    new SelectListItem{ Text = "WY", Value = "WY" }
                }, "value", "Text"),
                "Select State", new { @class = "btn", @style = "border: 1px solid #ccc" })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Gender,
                new SelectList(new List<SelectListItem> {
                    new SelectListItem{ Text = "Male", Value = "Male" },
                    new SelectListItem{ Text = "Female", Value = "Female" }
                }, "value", "Text"),
                "Select Gender", new { @class = "btn", @style = "border: 1px solid #ccc" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Register" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
